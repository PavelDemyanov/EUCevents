#!/usr/bin/env node

// –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
// node check_config.js

const fs = require('fs');
const path = require('path');

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...\n');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ - –µ—Å—Ç—å –ª–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ Git
console.log('üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...');
const sensitiveFiles = [
    '.env', 
    'database_dump.sql', 
    'backup.sql',
    'config.json'
];

let foundSensitiveFiles = [];
for (const file of sensitiveFiles) {
    if (fs.existsSync(file)) {
        // –ü—Ä–æ–≤–µ—Ä–∏–º, –Ω–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –ª–∏ —Ñ–∞–π–ª Git-–æ–º
        try {
            const { execSync } = require('child_process');
            execSync(`git ls-files --error-unmatch ${file}`, {stdio: 'pipe'});
            foundSensitiveFiles.push(file);
        } catch (error) {
            // –§–∞–π–ª –Ω–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è Git-–æ–º - —ç—Ç–æ —Ö–æ—Ä–æ—à–æ
        }
    }
}

if (foundSensitiveFiles.length > 0) {
    console.log('‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ Git:');
    foundSensitiveFiles.forEach(f => console.log(`   - ${f}`));
    console.log('   –£–¥–∞–ª–∏—Ç–µ –∏—Ö –∏–∑ Git: git rm --cached filename');
} else {
    console.log('‚úÖ –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –∑–∞—â–∏—â–µ–Ω—ã –æ—Ç Git');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
if (!fs.existsSync('.env')) {
    console.log('‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω');
    console.log('   –°–∫–æ–ø–∏—Ä—É–π—Ç–µ .env.local.example –≤ .env');
    process.exit(1);
} else {
    console.log('‚úÖ –§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω');
}

// –ß—Ç–µ–Ω–∏–µ .env
const dotenv = require('dotenv');
dotenv.config();

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const requiredVars = [
    'DATABASE_URL',
    'TELEGRAM_BOT_TOKEN',
    'SESSION_SECRET'
];

let missingVars = [];
for (const varName of requiredVars) {
    if (!process.env[varName]) {
        missingVars.push(varName);
    }
}

if (missingVars.length > 0) {
    console.log('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
    missingVars.forEach(v => console.log(`   - ${v}`));
    console.log('\n   –î–æ–±–∞–≤—å—Ç–µ –∏—Ö –≤ —Ñ–∞–π–ª .env');
    process.exit(1);
} else {
    console.log('‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
console.log('\nüîå –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');

const { Client } = require('pg');
const client = new Client({
    connectionString: process.env.DATABASE_URL
});

client.connect()
    .then(() => {
        console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ');
        return client.query('SELECT COUNT(*) FROM admin_users WHERE is_active = true');
    })
    .then((result) => {
        const adminCount = parseInt(result.rows[0].count);
        if (adminCount > 0) {
            console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${adminCount} –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤`);
            console.log('   –ú–∞—Å—Ç–µ—Ä –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è');
        } else {
            console.log('‚ö†Ô∏è  –ê–∫—Ç–∏–≤–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
            console.log('   –ú–∞—Å—Ç–µ—Ä –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ');
        }
    })
    .catch((error) => {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:');
        console.log(`   ${error.message}`);
        console.log('\n   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:');
        console.log('   - PostgreSQL –∑–∞–ø—É—â–µ–Ω');
        console.log('   - –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Å—Ç—Ä–æ–∫–∏ DATABASE_URL');
        console.log('   - –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞ –∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –¥–∞–º–ø');
        process.exit(1);
    })
    .finally(() => {
        client.end();
        console.log('\nüéâ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞! –ú–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: npm run dev');
    });