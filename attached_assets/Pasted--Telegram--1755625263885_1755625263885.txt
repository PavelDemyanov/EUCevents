Техническое задание
Наименование проекта: Telegram-бот и веб-приложение для регистрации участников мероприятий

Цель: Создать Telegram-бота и веб-приложение для управления мероприятиями, записи участников, регистрации их данных и формирования списков участников.

1. Инфраструктура и база данных

1.1. Создать базу данных с таблицами:

- Users (пользователи):
  - id (уникальный идентификатор)
  - telegram_id
  - telegram_nickname
  - full_name (ФИО)
  - phone (с проверкой по маске РФ)
  - transport_type (одно из: моноколесо, самокат, зритель)
  - participant_number (автоматически назначаемый, от 1 до 99, кроме зарезервированных)
  - is_active (bool, активен или нет)

- Bots:
  - id
  - token
  - name
  - linked_chats (связка с chat_id)

- Chats:
  - id
  - chat_id
  - bot_id (связь с Bots)

- Events (мероприятия):
  - id
  - name (название)
  - location (место проведения)
  - datetime (дата и время)
  - chat_id (привязка к чату)
  - is_active (true/false)

- ReservedNumbers:
  - id
  - event_id
  - number (зарезервированные номера от 1 до 99, бот их пропускает при выдаче участнику)

2. Telegram-бот

2.1. Подключение и инициализация:

- Бот должен быть привязан к различным чатам (чат-ID сохраняется).
- Поддерживаются несколько ботов (отдельный токен - отдельный бот).

2.2. Сценарий регистрации пользователя:

- Пользователь нажимает /start.
- Бот определяет активные мероприятия, привязанные к текущему чату.
- Если мероприятий несколько — предлагает выбор.
- После выбора мероприятия происходит последовательная регистрация:
  - Запрос ФИО.
  - Запрос @nickname в Telegram (автоматически, если возможно).
  - Запрос мобильного телефона с проверкой по маске РФ: +7 (XXX) XXX-XX-XX.
  - Запрос типа транспортного средства: выбор из “Моноколесо”, “Самокат”, “Зритель”.
- Бот автоматически проставляет номер участника (от 1 до 99, не включая зарезервированные).
- Все данные сохраняются.

2.3. Возможность редактирования и отказа:

- Пользователь может повторно написать боту.
- Бот сообщает: «Вы зарегистрированы на мероприятие [название], ваши данные: [...]»
- Предлагает:
  - Изменить тип транспортного средства.
  - Отказаться от участия.
- В случае отказа пользователь становится неактивным в базе (is_active = false), сохранённые данные — не удаляются.

3. Веб-приложение (Frontend + Backend)

3.1. Интерфейс:

- Список всех мероприятий (в разрезе чатов).
- Кликабельность мероприятия → открывается таблица с участниками.

3.2. Таблица участников мероприятия:

- Поля таблицы:
  - Номер участника
  - ФИО
  - Telegram ник
  - Телефон
  - Тип транспорта
- Функции:
  - Возможность сортировки по любому из столбцов.
  - Возможность фильтрации по типу транспорта.
  - Визуально отделять неактивных пользователей (например, серым фоном).

3.3. Резерв номеров:

- Интерфейс должен позволять ввести список номеров (1–99) для исключения из автоматической выдачи при регистрации.

3.4. Генерация PDF:

- Кнопка «Сгенерировать PDF»:
  - Получает всех активных участников мероприятия.
  - Форматирует их в таблицу для печати:
    - Одна страница, портретная ориентация.
    - Таблица с теми же полями: № участника, ФИО, Ник, Телефон, Тип транспорта.
    - Внизу страницы — сводка:
      - Кол-во моноколёс.
      - Кол-во самокатов.
      - Кол-во зрителей.

4. Ограничения

- Максимально 99 участников с номерами (0 не используется).
- Возможность иметь несколько мероприятий на один чат.
- Одновременно несколько пользователей могут регистрироваться.

5. Дополнительно

- Интерфейс администратора для просмотра/редактирования мероприятий.
- Возможность вручную зарегистрировать пользователя или изменить его данные из панели администратора (опционально).
- Лог действий пользователей и администраторов (опционально).

Комментарии

- Весь Интерфейс на русском языке.
- Интерфейс админ-панели — веб-based, защищён логином/паролем.
- Валидация данных на клиенте и сервере.